@mixin oxd-input-control {
  box-sizing: border-box;
  font-family: $oxd-input-control-font-family;
  color: $oxd-input-control-font-color;
  font-size: $oxd-input-control-font-size;
  font-weight: $oxd-input-control-font-weight;
  line-height: $oxd-input-control-line-height;
  border-radius: $oxd-input-control-border-radius;
  padding: $oxd-input-control-vertical-padding
    $oxd-input-control-horizontal-padding;
}

@mixin oxd-input-control-size {
  width: $oxd-input-control-width;
}

@mixin oxd-scrollbar(
  $thumb-color: $oxd-scrollbar-thumb-color,
  $track-color: $oxd-scrollbar-track-color,
  $size: $oxd-scrollbar-size,
  $arrow-color: $oxd-scrollbar-arrow-color
) {
  // Firefox
  scrollbar-color: $thumb-color $track-color;
  scrollbar-width: thin;

  // Chrome/Edge/Safari
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $oxd-scrollbar-thumb-border-radius;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  // IE
  @media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
    & {
      scrollbar-face-color: $thumb-color;
      scrollbar-track-color: $track-color;
      scrollbar-arrow-color: $arrow-color;
    }
  }
}

@mixin oxd-flex-center {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@mixin oxd-respond-to($breakpoint) {
  $raw-query: map-get($oxd_breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
      type-of($raw-query) == 'string',
      unquote($raw-query),
      inspect($raw-query)
    );

    @media #{$query} {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$oxd_breakpoints` map.';
  }
}
